[{"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\App.js":"1","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\Footer\\index.js":"2","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\CardList\\index.js":"3","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\Slider\\SliderTop.style.js":"4","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\Card\\Card.style.js":"5","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\index.js":"6","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\router\\Router.js":"7","D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\pages\\register\\index.js":"8","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\index.js":"9","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\App.js":"10","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\reportWebVitals.js":"11","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\router\\Router.js":"12","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\Home.js":"13","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\helper\\postData.js":"14","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\register\\index.js":"15","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\login\\index.js":"16","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\details\\index.js":"17","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\inUse\\index.js":"18","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Navbar\\index.js":"19","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Footer\\index.js":"20","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\helper\\FetchData.js":"21","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderBottom.js":"22","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderTop.js":"23","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\register\\Register.style.js":"24","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\details\\details.style.js":"25","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\inUse\\inUse.style.js":"26","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardList\\index.js":"27","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Navbar\\Navbar.style.js":"28","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Footer\\Footer.style.js":"29","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderBottom.style.js":"30","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderTop.style.js":"31","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\table\\index.js":"32","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\snackBar\\index.js":"33","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\tableHeader\\index.js":"34","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardList\\CardList.style.js":"35","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\table\\table.style.js":"36","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Card\\index.js":"37","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Card\\Card.style.js":"38","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\addToBasket\\index.js":"39","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\checkout\\index.js":"40","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\checkout\\button.js":"41","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\checkout\\style.js":"42","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardChekout\\index.js":"43","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardChekout\\Card.style.js":"44"},{"size":159,"mtime":1608384182413,"results":"45","hashOfConfig":"46"},{"size":5003,"mtime":1609006874631,"results":"47","hashOfConfig":"46"},{"size":1931,"mtime":1608986527047,"results":"48","hashOfConfig":"46"},{"size":643,"mtime":1609006532635,"results":"49","hashOfConfig":"46"},{"size":1176,"mtime":1609023184059,"results":"50","hashOfConfig":"46"},{"size":500,"mtime":1606140531220,"results":"51","hashOfConfig":"46"},{"size":682,"mtime":1609144053705,"results":"52","hashOfConfig":"46"},{"size":585,"mtime":1609146232420,"results":"53","hashOfConfig":"46"},{"size":500,"mtime":1606140531220,"results":"54","hashOfConfig":"55"},{"size":159,"mtime":1608384182413,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1606140531220,"results":"57","hashOfConfig":"55"},{"size":2646,"mtime":1609171175597,"results":"58","hashOfConfig":"55"},{"size":990,"mtime":1609166463607,"results":"59","hashOfConfig":"55"},{"size":291,"mtime":1609161178117,"results":"60","hashOfConfig":"55"},{"size":6160,"mtime":1609162437326,"results":"61","hashOfConfig":"55"},{"size":5302,"mtime":1609162450862,"results":"62","hashOfConfig":"55"},{"size":9358,"mtime":1609170152867,"results":"63","hashOfConfig":"55"},{"size":3099,"mtime":1609162461715,"results":"64","hashOfConfig":"55"},{"size":8849,"mtime":1609172804674,"results":"65","hashOfConfig":"55"},{"size":5003,"mtime":1609006874631,"results":"66","hashOfConfig":"55"},{"size":484,"mtime":1609171796933,"results":"67","hashOfConfig":"55"},{"size":1978,"mtime":1609170414593,"results":"68","hashOfConfig":"55"},{"size":1399,"mtime":1609002251782,"results":"69","hashOfConfig":"55"},{"size":1308,"mtime":1609139878890,"results":"70","hashOfConfig":"55"},{"size":1475,"mtime":1609158153935,"results":"71","hashOfConfig":"55"},{"size":998,"mtime":1609139878888,"results":"72","hashOfConfig":"55"},{"size":1989,"mtime":1609166072945,"results":"73","hashOfConfig":"55"},{"size":782,"mtime":1609164427062,"results":"74","hashOfConfig":"55"},{"size":1341,"mtime":1608982862585,"results":"75","hashOfConfig":"55"},{"size":342,"mtime":1608980248230,"results":"76","hashOfConfig":"55"},{"size":643,"mtime":1609006532635,"results":"77","hashOfConfig":"55"},{"size":2588,"mtime":1609162500218,"results":"78","hashOfConfig":"55"},{"size":1210,"mtime":1609162489033,"results":"79","hashOfConfig":"55"},{"size":1340,"mtime":1609139878892,"results":"80","hashOfConfig":"55"},{"size":1522,"mtime":1608992440827,"results":"81","hashOfConfig":"55"},{"size":1266,"mtime":1609139878892,"results":"82","hashOfConfig":"55"},{"size":2673,"mtime":1609164328345,"results":"83","hashOfConfig":"55"},{"size":1176,"mtime":1609023184059,"results":"84","hashOfConfig":"55"},{"size":566,"mtime":1609161872675,"results":"85","hashOfConfig":"55"},{"size":3519,"mtime":1609171957813,"results":"86","hashOfConfig":"55"},{"size":2428,"mtime":1609088953778,"results":"87","hashOfConfig":"55"},{"size":821,"mtime":1609147414402,"results":"88","hashOfConfig":"55"},{"size":5191,"mtime":1609172122402,"results":"89","hashOfConfig":"55"},{"size":1082,"mtime":1609147065786,"results":"90","hashOfConfig":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"13ajvu7",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"y5uthv",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\App.js",[],["195","196"],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\Footer\\index.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\CardList\\index.js",["197"],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\Slider\\SliderTop.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\components\\Card\\Card.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\index.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\router\\Router.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonFE-osman\\src\\pages\\register\\index.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\index.js",[],["198","199"],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\App.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\reportWebVitals.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\router\\Router.js",["200"],"import { useState,createContext,useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from '../pages/Home';//*\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport Register from \"../pages/register\";\r\nimport Login from \"../pages/login\";\r\nimport InUse from \"../pages/inUse\";\r\nimport Details from \"../pages/details\";\r\nimport Checkout from \"../pages/checkout\";\r\nimport {fetchData} from '../helper/FetchData';\r\nimport {postData} from '../helper/postData';\r\n\r\nexport const Context = createContext();\r\n\r\nfunction AppRouter() {\r\n  const [productData, setProductData] = useState();\r\n  const [similarProductsData, setsimilarProductsData] = useState([]);\r\n  const [currentProductId,setCurrentProductId] = useState();\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n  const [snackBarMessage, setsnackBarMessage] = useState();\r\n\r\n  const addToBasket=(id)=>{\r\n    postData(`api/user/addProduct/${id}`,id)\r\n    .then((res)=>{\r\n        console.log(\"added to Basket\",res);\r\n        setsnackBarMessage(\"Added to Basket\");\r\n        snackBarHandleClick();\r\n    })\r\n    .catch((err)=>{\r\n      setsnackBarMessage(\"can not added to Basket\",err);\r\n      snackBarHandleClick();\r\n    }) \r\n  }\r\n\r\n  const getDetails=(id)=>{\r\n    fetchData(`api/product/detail/${id}`)\r\n    .then((res)=>{\r\n        console.log(\"Details\",res);//*\r\n        setProductData(res?.data?.product);\r\n    })\r\n    .catch((err)=>{\r\n        console.log(\"can not find Product Details\",err)\r\n    })\r\n  }\r\n  \r\n  const snackBarHandleClick = () => {\r\n    setSnackBarOpen(true);\r\n  };\r\n\r\n  const snackBarHandleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackBarOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <Context.Provider value={{productData, setProductData, similarProductsData, setsimilarProductsData,\r\n      addToBasket, getDetails,currentProductId,setCurrentProductId,snackBarOpen,setSnackBarOpen,snackBarHandleClick,\r\n      snackBarHandleClose,snackBarMessage,setsnackBarMessage}}>  \r\n      <Router>\r\n      <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/inUse\" component={InUse} />\r\n            <Route exact path=\"/details\" component={Details} />\r\n            <Route exact path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/\" component={HomePage} />\r\n          </Switch>\r\n          <Footer />\r\n      </Router>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\Home.js",["201"],"import React, { createContext, useState, useEffect } from 'react'\r\nimport { Container } from '@material-ui/core';\r\nimport { CardList } from '../components/CardList';\r\nimport SliderTop from '../components/Slider/SliderTop';\r\nimport SliderBottom from '../components/Slider/SliderBottom';\r\n// import {useHistory} from 'react-router-dom';\r\nimport { fetchData } from '../helper/FetchData'\r\nexport const ProductContext = createContext();\r\n\r\nfunction HomePage() {\r\n    const [productList, setProductList] = useState()\r\n\r\n    useEffect(() => {\r\n        fetchData('/api/product/homepage')\r\n            .then(res => setProductList(res?.data?.products))\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div >\r\n            <ProductContext.Provider value={{ productList }} >\r\n\r\n                <SliderTop />\r\n                <CardList />\r\n                <SliderBottom />\r\n\r\n            </ProductContext.Provider>\r\n        </div>\r\n    )\r\n}\r\nexport default HomePage;\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\helper\\postData.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\register\\index.js",["202","203","204","205","206"],"import React,{useContext} from \"react\";\r\nimport { Button, TextField, Grid, Container } from \"@material-ui/core\";\r\nimport { styles, Image, Header, Paragraph } from './Register.style.js';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Context} from '../../router/Router';\r\n\r\nfunction Register() {\r\n    let history = useHistory();\r\n    const consumer = useContext(Context);\r\n    const register = async () => {\r\n        try {\r\n            await axios.post(\"/api/user/register\", {\r\n                userFirstName: formik.values.yourName,\r\n                userEmail: formik.values.email,\r\n                userPassword: formik.values.password1\r\n            })\r\n            history.push(\"/login\");\r\n        } catch (error) {\r\n            //consumer.setDisabledUser(formik.values);\r\n            history.push({\r\n                pathname:\"/inUse\",\r\n                state:{email:formik.values.email}\r\n            });\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            yourName: \"\",\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\"\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n            yourName: Yup.string().required('Required'),\r\n            email: Yup.string().email('Invalid email address').required('Required'),\r\n            password1: Yup.string()\r\n                .required('Required')\r\n                .min(6, 'Must be 6 characters or more'),\r\n            password2: Yup.string()\r\n                .oneOf([Yup.ref('password1'), null], 'Passwords must match')\r\n                .required('Required')\r\n        }),\r\n        onSubmit: () => {\r\n            register();\r\n        },\r\n    });\r\n\r\n    const signupStyles = styles();\r\n    return (\r\n        <Container className={signupStyles.wrapper} maxWidth=\"xs\">\r\n            <Image src=\"https://thecollegepost.com/wp-content/uploads/2019/07/Amazon-logo.png\"></Image>\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n                <Grid className={signupStyles.registerContainer} container spacing={3}>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <Header>Create account</Header>\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <TextField\r\n                            name=\"yourName\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Your Name\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            value={formik.values.yourName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.errors.yourName}\r\n                            helperText={formik.errors.yourName}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <TextField\r\n                            name=\"email\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.errors.email}\r\n                            helperText={formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <TextField\r\n                            name=\"password1\"\r\n                            id=\"outlined-basic\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            value={formik.values.password1}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.errors.password1}\r\n                            helperText={formik.errors.password1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <TextField\r\n                            name=\"password2\"\r\n                            id=\"outlined-basic\"\r\n                            type=\"password\"\r\n                            label=\"Re-enter password\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            value={formik.values.password2}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.errors.password2}\r\n                            helperText={formik.errors.password2}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <Button className={signupStyles.button}\r\n                            type=\"Submit\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            fullWidth>\r\n                            Create your Amazon account\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <Paragraph>By creating an account you agree to Amazon's  <a href=\"#\">Conditions of Use & Sale.</a> Please see\r\n                    our <a href=\"#\">Privacy Notice,</a> our <a href=\"#\">Cookies Notice</a> and our <a href=\"#\">Interest-Based Ads Notice.</a>\r\n                        </Paragraph>\r\n                        <Paragraph>Already have an account?  <a href=\"/login\">Sign-In</a></Paragraph>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\nexport default Register;","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\login\\index.js",["207","208","209","210","211"],"import React,{useContext} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, TextField, Grid, Container } from \"@material-ui/core\";\r\nimport { styles, Image, Header, Paragraph, HelpSpan, NewSpan} from '../register/Register.style';\r\nimport { useFormik } from 'formik';\r\nimport {postData} from '../../helper/postData';\r\nimport * as Yup from 'yup';\r\nimport {Context} from '../../router/Router';\r\nimport SnackBar from '../../components/snackBar'\r\n// import {fetchData} from '../../helper/fetchData'\r\n\r\nfunction Login() {\r\n    let history = useHistory();\r\n    const consumer = useContext(Context);\r\n    const onFinish = (values) => {\r\n        postData(\"/api/user/login\", values)\r\n          .then((data) => {\r\n            localStorage.setItem(\"token\", data.token);\r\n            console.log(\"token\",data.token);\r\n            // setLoggedIn(true);\r\n            history.push(\"/\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"Wrong password or username\")\r\n            consumer.setsnackBarMessage(\"Wrong password or username\",err);\r\n            consumer.snackBarHandleClick();\r\n            // toast(err?.message || \"An error occured\");\r\n          });\r\n      };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            userEmail: \"\",\r\n            userPassword: \"\",\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n            userEmail: Yup.string().email('Invalid email address').required('Required'),\r\n            userPassword:Yup.string()\r\n                .required('Required')\r\n                .min(6,'Must be 6 characters or more'),\r\n        }),\r\n        onSubmit: () => {\r\n            onFinish(formik.values);\r\n            console.log(\"Success\");\r\n        },\r\n    });\r\n\r\n    const signupStyles = styles();\r\n    return (\r\n        <Container className={signupStyles.wrapper} maxWidth=\"xs\">\r\n            <Image src=\"https://thecollegepost.com/wp-content/uploads/2019/07/Amazon-logo.png\"></Image>\r\n            <form \r\n                //onFinish={onFinish} \r\n                // onFinishFailed={onFinishFailed}\r\n                onSubmit={formik.handleSubmit}\r\n                >\r\n\r\n                <Grid className={signupStyles.registerContainer} container spacing={3}>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <Header>Sign-In</Header>\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <TextField\r\n                            name=\"userEmail\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            value={formik.values.userEmail}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.errors.userEmail}\r\n                            helperText={formik.errors.userEmail}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <TextField\r\n                            name=\"userPassword\"\r\n                            id=\"outlined-basic\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            value={formik.values.userPassword}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.errors.userPassword}\r\n                            helperText={formik.errors.userPassword}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <Button className={signupStyles.button}\r\n                            type=\"Submit\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            fullWidth>\r\n                            Sign-In\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item className={signupStyles.inputs} xs={10}>\r\n                        <Paragraph>By signing-in you agree to Amazon's <a href=\"#\">Conditions of Use & Sale.</a> \r\n                            Please see our <a href=\"#\">Privacy Notice</a>, our <a href=\"#\">Cookies Notice</a> and our <a>Interest-Based Ads Notice.</a> \r\n                        </Paragraph>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <HelpSpan><a href=\"#\">Need help?</a></HelpSpan>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Grid className={signupStyles.newSpan}>\r\n                <NewSpan>New to Amazon?</NewSpan> \r\n                <Button \r\n                    className={signupStyles.routetoRegister}\r\n                    fullWidth\r\n                    onCli\r\n                    onClick={()=>history.push('/register')}\r\n                    >Create your Amazon account\r\n                </Button>\r\n            </Grid>\r\n            <SnackBar/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\details\\index.js",["212","213","214"],"import React, { useEffect, useContext, useState, useRef } from 'react'\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { style, Image, Link, DetailHeader, DetailP, DetailRed, CancelledPrice } from './details.style';\r\nimport { fetchData } from '../../helper/FetchData';\r\nimport { styles } from '../register/Register.style';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DetailsTable from '../../components/table';\r\nimport TableHeader from '../../components/tableHeader';\r\nimport ShopIcon from '@material-ui/icons/Shop';\r\nimport { Context } from '../../router/Router';\r\nimport SnackBar from '../../components/snackBar';\r\n\r\n\r\nfunction Details() {\r\n    const consumer = useContext(Context);\r\n    const canvasRef = useRef(null);\r\n    const imageRef = useRef(null);\r\n    const ctx = canvasRef?.current?.getContext(\"2d\");\r\n\r\n    const getCanvas = (x, y) => {\r\n        ctx?.drawImage(imageRef?.current, x-55, y-120, 300, 400, 0, 0, 500, 600);\r\n    }\r\n    const canvasClean = () => {\r\n        canvasRef.current.style.display = \"inline\";\r\n        ctx?.clearRect(0, 0, 700, 800);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n        canvasRef.current.style.display = 'none'\r\n        consumer.getDetails(consumer.currentProductId)\r\n        console.log('consumer.currentProductId', consumer.currentProductId)\r\n\r\n        fetchData(\"/api/product/homepage\")\r\n            .then(res => {\r\n                consumer.setsimilarProductsData(res.data?.products);\r\n                console.log('>>>>', res.data?.products)\r\n            })\r\n\r\n\r\n    }, [consumer.currentProductId])\r\n\r\n    const signupStyles = styles();\r\n    const detailStyles = style();\r\n    return (\r\n        <Container className={detailStyles.container} >\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={4}>\r\n                    <Image\r\n                        onMouseOver={() => canvasClean()}\r\n                        onMouseLeave={() => canvasRef.current.style.display = 'none'}\r\n                        onMouseMove={(e) => getCanvas(e.clientX, e.clientY)}\r\n                        ref={imageRef} src={consumer?.productData?.image}\r\n                    />\r\n                    {/* <Image src=\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"></Image> */}\r\n                </Grid>\r\n                <canvas ref={canvasRef} className={detailStyles.canvas} width=\"500\" height=\"600\" />\r\n                <Grid className={detailStyles.containerAboutItem} xs={12} md={4}>\r\n                    <h3>{consumer?.productData?.title}</h3>\r\n                    <Rating name=\"read-only\" value=\"4\" readOnly />\r\n                    <Link href=\"#\">17,065 ratings</Link> | <Link href=\"#\"> 1000+ answered questions</Link>\r\n                    <Grid container direction=\"row\" >\r\n                        <Grid>\r\n                            <DetailHeader>Suggested price:</DetailHeader>\r\n                            <DetailHeader style={{ height: \"3.2rem\" }}>Top Deal:</DetailHeader>\r\n                            <DetailHeader>You Save:</DetailHeader>\r\n                        </Grid>\r\n                        <Grid>\r\n                            <CancelledPrice>€{Math.round((consumer?.productData?.price * 1.3) * 100) / 100}</CancelledPrice>\r\n                            <DetailP><Typography variant=\"h6\" style={{ color: \"#C45500\" }}><b> € {consumer?.productData?.price}</b></Typography>\r\n                             FREE Delivery.<Link href=\"#\">Details</Link> </DetailP>\r\n                            <DetailP>€{Math.round((consumer?.productData?.price * .3) * 100) / 100}</DetailP>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <h4>About this item</h4>\r\n                    <DetailP>{consumer?.productData?.description}</DetailP>\r\n                </Grid>\r\n                <Grid className={detailStyles.checkoutWrapper} xs={12} md={3}>\r\n\r\n\r\n                    {/* <CanvasGradient></CanvasGradient>\r\n                    <CanvasPattern></CanvasPattern>\r\n                    <CanvasRenderingContext2D></CanvasRenderingContext2D>\r\n                    <OffscreenCanvas></OffscreenCanvas>\r\n                    <OffscreenCanvasRenderingContext2D></OffscreenCanvasRenderingContext2D> */}\r\n\r\n                    <Typography variant=\"h6\" align=\"left\" style={{ color: \"#C45500\", marginLeft: \"1rem\" }}><b>€{consumer?.productData?.price}</b></Typography>\r\n                    <DetailP><b>FREE Delivery.</b><Link href=\"#\"> Delivery Details</Link></DetailP>\r\n                    <DetailP>Arrives: Tuesday,<b>Dec 29</b> <Link href=\"#\"> Details</Link></DetailP>\r\n                    <DetailP>Fastest delivery: Thursday,<b> Dec 31</b><Link href=\"#\"> Details</Link></DetailP>\r\n                    <Grid className={detailStyles.buttonsGrid}>\r\n                        <SnackBar />\r\n                        <Button className={signupStyles.button}\r\n                            type=\"Submit\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            onClick={() => consumer.addToBasket(consumer?.productData?._id)}\r\n                        >\r\n                            <ShoppingCartOutlinedIcon className={detailStyles.shopIcon} />\r\n                            Add to Basket\r\n                        </Button>\r\n                        <Button className={detailStyles.buttonBuyNow}\r\n                            type=\"Submit\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            fullWidth>\r\n                            <ShopIcon className={detailStyles.shopIcon} />\r\n                            Buy Now\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid className={detailStyles.similarItems} container >\r\n                <Typography variant=\"h5\" style={{ color: \"#C45500\", marginTop: \"3rem\" }}>Most Popular Products</Typography>\r\n                <Grid className={detailStyles.similarItems} container direction=\"row\" >\r\n                    <Grid item className={detailStyles.card} xs={12} md={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid xs={6} md={6}>\r\n                                <TableHeader />\r\n                            </Grid>\r\n                            <Grid xs={6} md={6}>\r\n                                <DetailsTable\r\n                                    similarProductsData={consumer.similarProductsData}\r\n                                    productNumber=\"5\"\r\n                                    r1=\"4.5\"\r\n                                    r2={consumer?.similarProductsData[5]?.price}\r\n                                    r3a=\"FREE Delivery.\" r3b=\"Delivery Details\"\r\n                                    r4=\"Amazon.de\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item className={detailStyles.card} xs={6} md={2}>\r\n                        <DetailsTable\r\n                            similarProductsData={consumer.similarProductsData}\r\n                            productNumber=\"1\"\r\n                            r1=\"4\"\r\n                            r2={consumer.similarProductsData[1]?.price}\r\n                            r3a=\"FREE Delivery.\" r3b=\"Delivery Details\"\r\n                            r4=\"Amazon.de\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={detailStyles.card} xs={6} md={2}>\r\n                        <DetailsTable\r\n                            similarProductsData={consumer.similarProductsData}\r\n                            productNumber=\"2\"\r\n                            r1=\"4.5\"\r\n                            r2={consumer?.similarProductsData[2]?.price}\r\n                            r3a=\"FREE Delivery.\" r3b=\"Delivery Details\"\r\n                            r4=\"Amazon.de\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid className={detailStyles.card} xs={6} md={2}>\r\n                        <DetailsTable\r\n                            similarProductsData={consumer.similarProductsData}\r\n                            productNumber=\"3\"\r\n                            r1=\"4\"\r\n                            r2={consumer.similarProductsData[3]?.price}\r\n                            r3a=\"FREE Delivery.\" r3b=\"Delivery Details\"\r\n                            r4=\"Amazon.de\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={detailStyles.card} xs={6} md={2}>\r\n                        <DetailsTable\r\n                            similarProductsData={consumer?.similarProductsData}\r\n                            productNumber=\"6\"\r\n                            r1=\"5\"\r\n                            r2={consumer?.similarProductsData[6]?.price}\r\n                            r3a=\"FREE Delivery.\" r3b=\"Delivery Details\"\r\n                            r4=\"Amazon.de\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Details;\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\inUse\\index.js",["215","216","217"],"import { useContext, useEffect } from 'react';\r\nimport { Grid, Container } from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Image } from '../register/Register.style';\r\nimport { WarningParagraph, WarningParagraph2,styles, WarningHeader, WarningHeader2,Link } from './inUse.style';\r\nimport { Context } from '../../router/Router';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst InUse = () => {\r\n    const location = useLocation();\r\n    const signupStyles = styles();\r\n    const consumer = useContext(Context);\r\n    let history = useHistory();\r\n    \r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"xs\">\r\n                <Image src=\"https://thecollegepost.com/wp-content/uploads/2019/07/Amazon-logo.png\"></Image>\r\n                <Grid className={signupStyles.registerContainer} container spacing={3}>\r\n                    <Grid item className={signupStyles.warning} xs={10}>\r\n                        <Grid container direction=\"row\" alignItems=\"center\">\r\n                            <WarningIcon style={{ fill: \"#FBAB2A\" }} />\r\n                            <WarningHeader>E-mail address already in use</WarningHeader>\r\n                        </Grid>\r\n                        <Grid>\r\n                            <WarningParagraph>You indicated you are a new customer, but an account already exists with the e-mail</WarningParagraph>\r\n                            <WarningParagraph><b>{location.state.email}</b></WarningParagraph>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={signupStyles.warning2}>\r\n                        <Grid item xs={10}>\r\n                            <WarningHeader2>Are you a returning customer?</WarningHeader2>\r\n                            <Grid container direction=\"column\">  \r\n                                <Link href=\"/login\">Sign-In</Link>\r\n                                <Link href=\"/home\">Forgotten your password?</Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <WarningHeader2>New to Amazon.de?</WarningHeader2>\r\n                            <WarningParagraph2>Create a new account with a <Link href=\"/register\">different e-mail address</Link></WarningParagraph2>\r\n                            <WarningParagraph2>Create a new account with <Link href=\"/register\">this e-mail address</Link></WarningParagraph2>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <WarningHeader2>Still need help?</WarningHeader2>\r\n                            <Grid container>\r\n                                <Link href=\"https://www.amazon.de/gp/help/customer/account-issues/ref=ap_cs_email_verify_warn_register?ie=UTF8\">Contact Customer Service</Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InUse;","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Navbar\\index.js",["218"],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Footer\\index.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\helper\\FetchData.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderBottom.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderTop.js",["219","220"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { styles, Wrapper, StyledImage, Page } from './SliderTop.style';\r\nimport { Container, Hidden } from '@material-ui/core';\r\n\r\nimport p1 from '../../assets/1.jpg'\r\nimport p2 from '../../assets/2.jpg'\r\nimport p3 from '../../assets/3.jpg'\r\nimport p4 from '../../assets/4.jpg'\r\nimport p5 from '../../assets/5.jpg'\r\nimport p6 from '../../assets/6.jpg'\r\nimport p7 from '../../assets/7.jpg'\r\n\r\n\r\nexport default function SliderTop() {\r\n    const classes = styles();\r\n    var settings = {\r\n        infinite: true,\r\n        slidesToShow: 1,\r\n    //  arrows: true,\r\n    //  nextArrow: <SampleNextArrow />,\r\n    //   prevArrow: <SamplePrevArrow />\r\n    };\r\n    return (\r\n        // <Hidden xsDown>\r\n        <Container maxWidth={'xl'} className={classes.root} >\r\n            <Slider {...settings}>\r\n                <Page><StyledImage src={p1} alt=\"Logo\" /></Page>\r\n                <Page><StyledImage src={p2} alt=\"Logo\" /></Page>\r\n                <Page><StyledImage src={p3} alt=\"Logo\" /></Page>\r\n                <Page><StyledImage src={p4} alt=\"Logo\" /></Page>\r\n                <Page><StyledImage src={p5} alt=\"Logo\" /></Page>\r\n                <Page><StyledImage src={p6} alt=\"Logo\" /></Page>\r\n                <Page><StyledImage src={p7} alt=\"Logo\" /></Page>\r\n\r\n            </Slider>\r\n        </Container>\r\n        // </Hidden>\r\n    )\r\n\r\n\r\n}\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\register\\Register.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\details\\details.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\inUse\\inUse.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardList\\index.js",["221"],"import React, { useContext } from 'react'\r\nimport { ProductContext } from '../../pages/Home'\r\nimport { MediaCard } from '../../components/Card'; //*\r\n// import { fetchData } from '../../helper/FetchData'\r\nimport { Container, Grid,Typography } from '@material-ui/core';\r\nimport { styles, Box } from './CardList.style'\r\n\r\n// category: \"men clothing\"\r\n// description: \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\"\r\n// id: 1\r\n// image: \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n// price: 109.95\r\n// title: \"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\"\r\n// _id: \"5fdd3fdac69db03ea0824a3d\"\r\n\r\n\r\n\r\nexport function CardList() {\r\n    const classes = styles();\r\n    const { productList } = useContext(ProductContext)\r\n    //maxWidth=\"sm\"  maxWidth={'xl'}\r\n    return (\r\n        <Container className={classes.root}  maxWidth={'xl'}> \r\n            <Grid container className={classes.grid}>\r\n                <Grid item xs={12} >\r\n                    <Box>   indirim kuponundan yararlanmak için kupon kısmına CODE47 yazınız.</Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Grid container spacing={6}>\r\n                {productList?.map((products) => {\r\n                    return (\r\n                        <Grid item lg={3} md={4} sm={6} xs={12} key={products.id}>\r\n                            <MediaCard\r\n                                productPrice={products.price}\r\n                                productId={products._id}\r\n                                productImage={products.image}\r\n                                productTitle={products.title}\r\n                                productDescription={products.description}\r\n                                productCategory={products.category}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Navbar\\Navbar.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Footer\\Footer.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderBottom.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Slider\\SliderTop.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\table\\index.js",["222","223","224"],"import React,{useContext} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { StyledTableCell, StyledTableRow, useStyles } from './table.style';\r\nimport AddToBasket from '../addToBasket';\r\nimport { Grid,Container } from \"@material-ui/core\";\r\nimport {SimilarItemImage, DetailP2} from './table.style';\r\nimport {Context} from '../../router/Router';\r\n\r\nexport default function CustomizedTables({similarProductsData, productNumber, r1, r2, r3a, r3b, r4 }) {\r\n  const tableStyles = useStyles();\r\n  const consumer = useContext(Context);\r\n  return (\r\n    <Grid>\r\n      <Grid container className={tableStyles.imageGrid}>\r\n        <SimilarItemImage src={similarProductsData[productNumber]?.image}></SimilarItemImage>\r\n      </Grid>\r\n      <Grid container className={tableStyles.titleGrid}>\r\n        {/* <DetailP2><a onClick={()=>consumer.getDetails(similarProductsData[productNumber]?._id)} href=\"#\">{similarProductsData[productNumber]?.title}</a></DetailP2> */}\r\n        <DetailP2><a onClick={()=>consumer.setCurrentProductId(similarProductsData[productNumber]?._id)} href=\"#\">{similarProductsData[productNumber]?.title}</a></DetailP2>\r\n      </Grid>\r\n      <AddToBasket onClick={()=>consumer.addToBasket(similarProductsData[productNumber]?._id)} />\r\n      {/* <AddToBasket onClick={()=>console.log(similarProductsData[productNumber]?._id)} /> */}\r\n      <TableContainer className={tableStyles.tableContainer} component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableBody>\r\n            <StyledTableRow>\r\n              {/* <StyledTableCell component=\"th\" scope=\"row\">aasdasdasd</StyledTableCell> */}\r\n              <StyledTableCell align=\"left\"><Rating name=\"half-rating-read\" precision={0.5} value={r1} readOnly /></StyledTableCell>\r\n            </StyledTableRow>\r\n            <StyledTableRow >\r\n              <StyledTableCell className={tableStyles.price} align=\"left\"><b>€{r2}</b></StyledTableCell>\r\n            </StyledTableRow>\r\n            <StyledTableRow>\r\n              <StyledTableCell className={tableStyles.shipping} align=\"left\"><b>{r3a}</b><a href=\"#\">{r3b}</a></StyledTableCell>\r\n            </StyledTableRow>\r\n            <StyledTableRow>\r\n              <StyledTableCell align=\"left\">{r4}</StyledTableCell>\r\n            </StyledTableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\snackBar\\index.js",["225"],"import React,{useContext} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Context} from '../../router/Router';\r\n\r\nfunction SnackBar() {\r\n  const consumer = useContext(Context);\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleClick}>Open simple snackbar</Button> */}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={consumer.snackBarOpen}\r\n        autoHideDuration={2000}\r\n        onClose={consumer.snackBarHandleClose}\r\n        message={consumer.snackBarMessage}\r\n        action={\r\n          <React.Fragment>\r\n            {/* <Button color=\"secondary\" size=\"small\" onClick={consumer.snackBarHandleClose}>\r\n              UNDO\r\n            </Button> */}\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={consumer.snackBarHandleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton> \r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SnackBar;","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\tableHeader\\index.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardList\\CardList.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\table\\table.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Card\\index.js",["226"],"import React, { useContext } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styles, Price, } from './Card.style.js'\r\n// import { FullscreenExit } from '@material-ui/icons';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Context } from '../../router/Router';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport function MediaCard({ productImage, productTitle, productPrice, productCategory, productId }) {\r\n  // Button'a onClik with history\r\n\r\n\r\n  const consumer = useContext(Context);\r\n  let history = useHistory();\r\n  const classes = styles();\r\n  return (\r\n    <Card className={classes.root}>\r\n\r\n      <CardActionArea >\r\n        <CardContent className={classes.inCard}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {productTitle}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardMedia\r\n          className={classes.media}\r\n          component=\"img\"\r\n          // height=\"140\"\r\n          image={productImage}//*\r\n        />\r\n\r\n      </CardActionArea>\r\n\r\n\r\n      <CardActions className={classes.actions}>\r\n\r\n        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\" className={classes.price}>\r\n          {`${productPrice} $`}\r\n        </Typography>\r\n\r\n        <Grid container direction='row' justify='space-between' >\r\n          <Button className={classes.button}\r\n            size=\"small\"\r\n            type=\"Submit\"\r\n            variant=\"contained\" >\r\n            Add to Basket\r\n         </Button>\r\n          <Button className={classes.button}\r\n            size=\"small\"\r\n            type=\"Submit\"\r\n            variant=\"contained\"\r\n            onClick={\r\n              () => {\r\n                consumer.setCurrentProductId(productId)\r\n                history.push('/details')\r\n              }\r\n            }\r\n\r\n          >\r\n            See more ...\r\n        </Button>\r\n        </Grid>\r\n      </CardActions>\r\n\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\n  // category: \"men clothing\"\r\n  // description: \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\"\r\n  // id: 1\r\n  // image: \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n  // price: 109.95\r\n  // title: \"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\"\r\n  // _id: \"5fdd3fdac69db03ea0824a3d\"\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\Card\\Card.style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\addToBasket\\index.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\checkout\\index.js",["227","228","229","230","231"],"import React ,{useEffect,useState} from 'react'\r\nimport  {MediaCard}  from '../../components/CardChekout'\r\nimport { Button, Container, Grid,Typography } from '@material-ui/core';\r\nimport { styles,Box } from './style'\r\nimport ConsecutiveSnackbars from \"../checkout/button\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport axios from \"axios\";\r\n\r\n \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n// const total (res){\r\n// res.map(r=>totalPrice+=r.price)\r\n\r\n// }\r\n\r\nfunction Checkout() {\r\n    const classes = styles();\r\n    const style = useStyles()\r\n  \r\n    const [checkout ,setCheckout] = useState()\r\n    const [total,setTotal]=useState()\r\n    const [length,setLenght]=useState()\r\n    const [deleted,setDeleted]=useState()\r\n    \r\n    useEffect(()=>{\r\n        let totalPrice = 0\r\n        privateFetchData(\"/api/user/checkout\")\r\n        .then(res =>  {\r\n            setLenght(res.length)\r\n            setCheckout(res)\r\n            setDeleted(false)\r\n        })\r\n        .then(()=> {\r\n            checkout.map(r=>totalPrice+=r.price) \r\n            setTotal(totalPrice) \r\n            // setLenght(checkout.lenght) \r\n            \r\n            }      \r\n        \r\n        )\r\n        .catch(err => console.log(err))\r\n        console.log(\"++++++\",total)\r\n        console.log(\"uzunluk\",length)\r\n       \r\n    }\r\n    ,[deleted])\r\n   \r\n    const privateFetchData = async (path) => {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(`${path}`, {\r\n          headers: {\r\n            token,\r\n          },\r\n        });\r\n        return response?.data;\r\n      };\r\n\r\n    console.log(\">>>>\",checkout)\r\n  \r\n   \r\n \r\n    return (\r\n         \r\n        <Container maxWidth={'xl'}>\r\n            \r\n            <Grid  container  spacing={6} className={classes.wrapper} >\r\n                            <Typography variant=\"h3\" >\r\n                                Checkout List\r\n                            </Typography>\r\n                            <Button variant=\"contained\" color=\"primary\" href=\"/\" style={{marginTop:20}} >\r\n                                Home Page\r\n                            </Button>\r\n\r\n              \r\n                            \r\n                {   \r\n                    \r\n                    checkout ? checkout.map((products) => {\r\n                    \r\n                   \r\n                    return (\r\n                        <Grid item  xs={12} key={products.id}>\r\n\r\n                            \r\n                            <MediaCard\r\n                                productId={products._id}\r\n                                productPrice={products.price}\r\n                                productImage={products.image}\r\n                                productTitle={products.title}\r\n                                productDescription={products.description}\r\n                                productCategory={products.category}\r\n                                setDeleted={setDeleted}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                }):\r\n                \r\n                <LinearProgress style={{marginTop:20}} />\r\n                \r\n                }\r\n            </Grid>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\checkout\\button.js",["232"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function ConsecutiveSnackbars() {\r\n  const [snackPack, setSnackPack] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (snackPack.length && !messageInfo) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && messageInfo && open) {\r\n      // Close an active snack when a new one is added\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, open]);\r\n\r\n  const handleClick = (message) => () => {\r\n    setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setMessageInfo(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleClick('Message A')}>Show message A</Button>\r\n      <Button onClick={handleClick('Message B')}>Show message B</Button> */}\r\n      <Snackbar\r\n        key={messageInfo ? messageInfo.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        message={messageInfo ? messageInfo.message : undefined}\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\pages\\checkout\\style.js",[],"D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardChekout\\index.js",["233","234"],"import React,{useState,useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styles, Price, } from './Card.style.js'\r\n// import { FullscreenExit } from '@material-ui/icons';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import {privateFetchData} from \"../../helper/FetchData\";\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\n\r\nexport function MediaCard({ productId,productImage, productTitle, productPrice, productDescription,setDeleted }) {\r\n  // Button'a onClik with history\r\n  const [snackPack, setSnackPack] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState(undefined);\r\n  useEffect(() => {\r\n    if (snackPack.length && !messageInfo) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && messageInfo && open) {\r\n      // Close an active snack when a new one is added\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, open]);\r\n\r\n  const handleClick = (message) => () => {\r\n    setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setMessageInfo(undefined);\r\n  };\r\n  const postData = async (path, data) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"data Post\", data);\r\n    const response = await axios.post(`${path}`, data, {\r\n      headers: {\r\n        token,\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n  const deleteProduct = () =>{\r\n            postData(`/api/user/deleteProduct/${productId}`)\r\n                  .then(()=>\r\n                   { handleClick('Product Deleted')\r\n                    setDeleted(true)}\r\n     )\r\n                  \r\n                  \r\n  }\r\n  \r\n\r\n  const classes = styles();\r\n  return (\r\n    <Card className={classes.root}>\r\n\r\n      <CardActionArea >\r\n        <CardContent className={classes.inCard}>\r\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n            {productTitle}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActionArea >\r\n        <CardMedia\r\n          className={classes.media}\r\n          component=\"img\"\r\n          // height=\"140\"\r\n          image={productImage}//*\r\n        />\r\n      <CardContent className={classes.inCard}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {productDescription}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n      </CardActionArea>\r\n\r\n\r\n      <CardActions className={classes.actions}>\r\n\r\n        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\r\n          {`${productPrice} $`}\r\n        </Typography>\r\n\r\n        <Grid container direction='row' justify='space-between' >\r\n          <Button className={classes.button}\r\n            onClick={deleteProduct}\r\n            \r\n            size=\"small\"\r\n            type=\"Submit\"\r\n            variant=\"contained\" >\r\n            Delete \r\n         </Button>\r\n          <Button className={classes.button}\r\n            \r\n            size=\"small\"\r\n            type=\"Submit\"\r\n            variant=\"contained\" >\r\n            Details\r\n        </Button>\r\n        </Grid>\r\n      </CardActions>\r\n      <Snackbar\r\n        key={messageInfo ? messageInfo.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={1000}\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        message={messageInfo ? messageInfo.message : undefined}\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n\r\n\r\n    </Card>\r\n    \r\n  );\r\n}\r\n\r\n  // category: \"men clothing\"\r\n  // description: \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\"\r\n  // id: 1\r\n  // image: \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n  // price: 109.95\r\n  // title: \"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\"\r\n  // _id: \"5fdd3fdac69db03ea0824a3d\"\r\n","D:\\XFULLSTACK\\1gitMyProject\\AmazonMERN\\src\\components\\CardChekout\\Card.style.js",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":5,"column":26,"nodeType":"241","messageId":"242","endLine":5,"endColumn":36},{"ruleId":"235","replacedBy":"243"},{"ruleId":"237","replacedBy":"244"},{"ruleId":"239","severity":1,"message":"245","line":1,"column":33,"nodeType":"241","messageId":"242","endLine":1,"endColumn":42},{"ruleId":"239","severity":1,"message":"246","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":19},{"ruleId":"239","severity":1,"message":"247","line":12,"column":11,"nodeType":"241","messageId":"242","endLine":12,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":129,"column":82,"nodeType":"250","endLine":129,"endColumn":94},{"ruleId":"248","severity":1,"message":"249","line":130,"column":25,"nodeType":"250","endLine":130,"endColumn":37},{"ruleId":"248","severity":1,"message":"249","line":130,"column":61,"nodeType":"250","endLine":130,"endColumn":73},{"ruleId":"248","severity":1,"message":"249","line":130,"column":100,"nodeType":"250","endLine":130,"endColumn":112},{"ruleId":"248","severity":1,"message":"249","line":100,"column":72,"nodeType":"250","endLine":100,"endColumn":84},{"ruleId":"248","severity":1,"message":"249","line":101,"column":44,"nodeType":"250","endLine":101,"endColumn":56},{"ruleId":"248","severity":1,"message":"249","line":101,"column":80,"nodeType":"250","endLine":101,"endColumn":92},{"ruleId":"248","severity":1,"message":"251","line":101,"column":119,"nodeType":"250","endLine":101,"endColumn":122},{"ruleId":"248","severity":1,"message":"249","line":105,"column":35,"nodeType":"250","endLine":105,"endColumn":47},{"ruleId":"239","severity":1,"message":"252","line":1,"column":40,"nodeType":"241","messageId":"242","endLine":1,"endColumn":48},{"ruleId":"239","severity":1,"message":"253","line":4,"column":53,"nodeType":"241","messageId":"242","endLine":4,"endColumn":62},{"ruleId":"254","severity":1,"message":"255","line":43,"column":8,"nodeType":"256","endLine":43,"endColumn":35,"suggestions":"257"},{"ruleId":"239","severity":1,"message":"245","line":1,"column":22,"nodeType":"241","messageId":"242","endLine":1,"endColumn":31},{"ruleId":"239","severity":1,"message":"247","line":13,"column":11,"nodeType":"241","messageId":"242","endLine":13,"endColumn":19},{"ruleId":"239","severity":1,"message":"258","line":14,"column":9,"nodeType":"241","messageId":"242","endLine":14,"endColumn":16},{"ruleId":"239","severity":1,"message":"259","line":2,"column":18,"nodeType":"241","messageId":"242","endLine":2,"endColumn":30},{"ruleId":"239","severity":1,"message":"260","line":3,"column":18,"nodeType":"241","messageId":"242","endLine":3,"endColumn":25},{"ruleId":"239","severity":1,"message":"261","line":4,"column":21,"nodeType":"241","messageId":"242","endLine":4,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":5,"column":26,"nodeType":"241","messageId":"242","endLine":5,"endColumn":36},{"ruleId":"239","severity":1,"message":"246","line":9,"column":15,"nodeType":"241","messageId":"242","endLine":9,"endColumn":24},{"ruleId":"248","severity":1,"message":"249","line":23,"column":19,"nodeType":"250","endLine":23,"endColumn":115},{"ruleId":"248","severity":1,"message":"249","line":38,"column":90,"nodeType":"250","endLine":38,"endColumn":102},{"ruleId":"239","severity":1,"message":"262","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"263","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"264","line":4,"column":17,"nodeType":"241","messageId":"242","endLine":4,"endColumn":20},{"ruleId":"239","severity":1,"message":"265","line":5,"column":8,"nodeType":"241","messageId":"242","endLine":5,"endColumn":28},{"ruleId":"239","severity":1,"message":"266","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":24},{"ruleId":"239","severity":1,"message":"267","line":28,"column":11,"nodeType":"241","messageId":"242","endLine":28,"endColumn":16},{"ruleId":"254","severity":1,"message":"268","line":56,"column":6,"nodeType":"256","endLine":56,"endColumn":15,"suggestions":"269"},{"ruleId":"239","severity":1,"message":"270","line":31,"column":9,"nodeType":"241","messageId":"242","endLine":31,"endColumn":20},{"ruleId":"239","severity":1,"message":"263","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"271","line":12,"column":10,"nodeType":"241","messageId":"242","endLine":12,"endColumn":20},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar",["272"],["273"],"'useEffect' is defined but never used.","'Container' is defined but never used.","'consumer' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'DetailRed' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'consumer'. Either include it or remove the dependency array.","ArrayExpression",["274"],"'history' is assigned a value but never used.","'DrawerButton' is defined but never used.","'Wrapper' is defined but never used.","'Hidden' is defined but never used.","'Button' is defined but never used.","'Price' is defined but never used.","'Box' is defined but never used.","'ConsecutiveSnackbars' is defined but never used.","'CircularProgress' is defined but never used.","'style' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkout', 'length', and 'total'. Either include them or remove the dependency array.",["275"],"'handleClick' is assigned a value but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [consumer, consumer.currentProductId]",{"range":"280","text":"281"},"Update the dependencies array to be: [checkout, deleted, length, total]",{"range":"282","text":"283"},[1711,1738],"[consumer, consumer.currentProductId]",[1574,1583],"[checkout, deleted, length, total]"]